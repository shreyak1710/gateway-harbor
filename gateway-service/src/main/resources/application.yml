
server:
  port: 8080

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      routes:
        - id: auth-service
          uri: http://localhost:8081
          predicates:
            - Path=/auth/**
          filters:
            - RewritePath=/auth/(?<segment>.*), /$\{segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: authCircuitBreaker
                fallbackUri: forward:/fallback/auth
            
        - id: customer-service
          uri: http://localhost:8082
          predicates:
            - Path=/api/customers/**
          filters:
            - RewritePath=/api/customers/(?<segment>.*), /customers/$\{segment}
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 5
                redis-rate-limiter.burstCapacity: 10
                key-resolver: "#{@userKeyResolver}"
            - name: CircuitBreaker
              args:
                name: customerCircuitBreaker
                fallbackUri: forward:/fallback/customers

  redis:
    host: localhost
    port: 6379
    
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081

resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
    instances:
      authCircuitBreaker:
        baseConfig: default
      customerCircuitBreaker:
        baseConfig: default
  timelimiter:
    configs:
      default:
        timeoutDuration: 3s
    instances:
      authCircuitBreaker:
        baseConfig: default
      customerCircuitBreaker:
        baseConfig: default
